/*
*   Name: BizAgi Desktop Render Document Generator Extension
*   Author: Dario Estupiñan
*   Comments:
*   -   This script will redefine the document generator render class to adjust to desktop devices
*/

// Extends itself
bizagi.rendering.document.extend("bizagi.rendering.document", {}, {


    /*
    *   Put formating to the documents that are generated by the control
    */
    applyDocumentTemplatesFormat: function () {
        var self = this;
        var control = self.getControl();

        // Set control container to behave as a block
        control.addClass("ui-bizagi-render-display-block");
        // Resolve the type of the document based on the extension and put the icon to acconding to it
        var documentList = $(".ui-bizagi-document-upload-item", control);
        $.each(documentList, function (index, value) {
            $(".ui-bizagi-document-type", value).addClass("ui-bizagi-document-extension");
            //add the tooltip to the document preview icon
            var previewTooltip = $(".ui-bizagi-document-preview", value);
            previewTooltip.attr("title", self.resources.getResource('render-document-preview-tooltip'));
            previewTooltip.tooltip();

            // Disable preview
            var returnType = self.returnCssTypeFile($("a > span", value).html());
            $(".ui-bizagi-document-type", value).addClass(returnType);
            $(".ui-bizagi-button", value).remove();
            $(".ui-bizagi-document-preview", value).attr("display", "none");
        });
    },

    //
    postRenderSingle: function () {
        var self = this;
        var properties = self.properties;
        var container = self.getContainerRender();
        self.applyDocumentTemplatesFormat();
        self.configureHandlers();


        if (!properties.editable) {
            container.addClass("bz-command-not-edit");
          
        }
        else {
            container.addClass("bz-command-edit-inline");
        }
        
    },
    /*
    *   Template method to implement in each device to customize the render's behaviour to add handlers
    */
    configureHandlers: function () {
        var self = this;

        self._super();
    },
    
    /*
    *   Redraw documents when needed
    */
    redrawDocuments: function (documents, noFiles, downloadalldocuments) {
        var self = this;

        self._super(documents, noFiles, downloadalldocuments);
        // Add icons
        self.applyDocumentTemplatesFormat();
    },
    
    /*
    *   Shows the document if the flag is set. 
    */
    autoOpenDocuments: function(){
    },
    
    updateControlForPrintMode:function(){
    }
});
