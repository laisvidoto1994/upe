/*
 *   Name: BizAgi Smartphone Render Document Generator Extension
 *   Author: Dario Estupiñan
 *   Comments:
 *   -   This script will redefine the document generator render class to adjust to desktop devices
 */

// Extends itself
bizagi.rendering.document.extend("bizagi.rendering.document", {}, {
    /*
    * Put formating to the documents that are generated by the control
    */
    applyDocumentTemplatesFormat: function () {
        var self = this;
        var control = self.getControl();
        self.getArrowContainer().hide();

        // Set control container to behave as a block
        control.addClass("ui-bizagi-render-display-block");

        // Resolve the type of the document based on the extension and put the icon to acconding to it
        var documentList = $(".ui-bizagi-document-upload-item", control);

        $.each(documentList, function (index, value) {
            $(".ui-bizagi-document-type", value).addClass("ui-bizagi-document-extension");

            // add the tooltip to the document preview icon        
            var previewTooltip = $(".ui-bizagi-document-preview", value);
            previewTooltip.attr("title", self.resources.getResource('render-document-preview-tooltip'));
            previewTooltip.tooltip();

            // Add file extension
            var returnType = self.returnCssTypeFile($("span > span", value).html());
            $(".ui-bizagi-document-type", value).addClass(returnType);

            // Disable preview
            $(".ui-bizagi-button", value).remove();
            $(".ui-bizagi-document-preview", value).attr("display", "none");
        });
    },

    /**
     * Identifies the extension of the file in a simpler way that ECM does
     * @param {} file 
     * @returns {} 
     */
    returnCssTypeFile: function (file) {

        if (file == undefined || file.lenght === 0) {
            return "ui-bizagi-document-upload-item-generic-file bz-file-text";
        }

        var extension = file.substr((file.lastIndexOf(".") + 1));

        switch (extension) {
            case "docx":
                return "ui-bizagi-document-upload-item-doc bz-file-word";
            case "pdf":
                return "ui-bizagi-document-upload-item-pdf bz-file-pdf";
            case "xlsx":
                return "ui-bizagi-document-upload-item-xls bz-file-excel";
            default:
                return "ui-bizagi-document-upload-item-generic-file bz-file-text";
        }
    },

    postRenderSingle: function () {
        var self = this;
        var properties = self.properties;
        var container = self.getContainerRender();
        self.configureHelpText();
        self.applyDocumentTemplatesFormat();
        self.configureHandlers();

        if (!properties.editable) {
            container.addClass("bz-rn-non-editable");
        } else {
            container.addClass("bz-command-edit-inline");
        }
    },
    /*
    * Template method to implement in each device to customize the render's
    * behaviour to add handlers
    */
    configureHandlers: function () {
        var self = this;
        var control = self.getControl();
        var mode = self.getMode();

        // Attach handler
        var generateLink = $(".ui-bizagi-button-documentgenerator", control);
        if (mode == "execution") {
            generateLink.click(function (e) {
                if (e.isPropagationStopped())
                    return;
                e.stopPropagation();

                self.properties.buttonExecuted = true;

                if (self.properties.validate) {
                    // Check if the form is valid, then generate
                    var isValid = self.validateContainer();
                    if (isValid) {
                        self.documentTemplateGenerate();
                    }
                } else {
                    // Just generate the form
                    self.documentTemplateGenerate();
                }

                self.properties.buttonExecuted = false;
            });
        }

        // Configure preview handler
        $(".ui-bizagi-document-upload-item > .ui-bizagi-document-upload-element", control).click(function (e) {
            self.showDocumentPreview($(this).data("url"), $(this).attr("title"));
        });

        // Configure delete handler
        $(".bz-rn-document-delete-icon", control).click(function (e) {
            if (e.isPropagationStopped())
                return;
            e.stopPropagation();

            self.deleteDocumentTemplate($(this).parent().data("filename"));
        });
    },

    /*
    * Redraw documents when needed
    */
    redrawDocuments: function (documents, noFiles, downloadalldocuments) {
        var self = this;

        self._super(documents, noFiles, downloadalldocuments);
        // Add icons
        self.applyDocumentTemplatesFormat();
    },

    /*
    * Shows the document if the flag is set.
    */
    autoOpenDocuments: function () {
    },

    updateControlForPrintMode: function () {
    },

    showDocumentPreview: function (url, title) {
        if (bizagi.util.isNativePluginSupported()) {
            bizagiapp.openFileWebView({ "itemUrl": url });
        } else if (!bizagi.util.isCordovaSupported()) {
            window.open(url, "_system", "location=yes");
        } else {
            bizagi.util.media.downloadFile(url, title);
        }
    }
});